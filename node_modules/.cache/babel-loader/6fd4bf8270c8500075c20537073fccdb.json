{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n/* fetch custome hook */\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchsource = async () => {\n      try {\n        let response = await fetch(url, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchsource();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useFetch, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/danibella/Desktop/PROYECTOS HOLBERTON/TEMPO/tempo_frontend/src/components/Hooks/Hooks.jsx"],"names":["useState","useEffect","useFetch","url","data","setData","loading","setLoading","error","setError","fetchsource","response","fetch","method","credentials","headers","Accept","json"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,WAAW,GAAG,YAAY;AAC5B,UAAI;AACA,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;AAC5BU,UAAAA,MAAM,EAAE,KADoB;AAE5BC,UAAAA,WAAW,EAAE,SAFe;AAG5BC,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAE,kBADH;AAEL,4BAAgB;AAFX;AAHmB,SAAN,CAA1B;AAQA,cAAMZ,IAAI,GAAG,MAAMO,QAAQ,CAACM,IAAT,EAAnB;AACAZ,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAZD,CAYE,OAAOC,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAjBD;;AAkBAG,IAAAA,WAAW;AACd,GApBQ,EAoBN,CAACP,GAAD,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACH,CA5BD;;GAAMN,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\n/* fetch custome hook */\nconst useFetch = (url) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchsource = async () => {\n            try {\n                let response = await fetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    }\n                });\n                const data = await response.json();\n                setData(data);\n                setLoading(false);\n            } catch (error) {\n                setError(error);\n                setLoading(false);\n            }\n        }\n        fetchsource()\n    }, [url])\n\n    return { data, loading, error }\n}\n\nexport default useFetch\n"]},"metadata":{},"sourceType":"module"}